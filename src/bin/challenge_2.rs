//! Challenge 2 - Even Fibonacci numbers
//!
//! Each new term in the Fibonacci sequence is generated by adding the
//! previous two terms. By starting with 1 and 2, the first 10 terms will be:
//!
//! 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//!
//! By considering the terms in the Fibonacci sequence whose values do not
//! exceed four million, find the sum of the even-valued terms.

extern crate euler;

use std::iter::Iterator;
use euler::Fibonacci;


fn main() {
    let fib = Fibonacci::new();

    let sum = fib.take_while(|i| *i < 4_000_000)
        .filter(|i| i % 2 == 0)
        .fold(0, |acc, i| acc + i);

    println!("{}", sum);

    // The solution
    assert_eq!(sum, 4613732);
}
